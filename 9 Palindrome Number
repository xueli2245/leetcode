题目描述
  Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.
  Follow up: Coud you solve it without converting the integer to a string?

例子
  Example 1:
    Input: 121
    Output: true
    
  Example 2:
    Input: -121
    Output: false
    Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
    
  Example 3:
    Input: 10
    Output: false
    Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
  
  
题目分析
  1. 使用string的方法：将int转为str；调用str的[::-1]的方法实现翻转；将翻转后的string转为int；比较数值是否相等
  2. 不使用string的方法：得到integer中每一位的值，利用数学方法计算翻转后的值，比较数值是否相等


解决方法1：使用string
  代码
  class Solution:
    def isPalindrome(self, x: int) -> bool:
        if x < 0:
            return False
        else:
            return True if x == int(str(x)[::-1]) else False
  分析：算法时间复杂度为O(n)，空间复杂度为O(1)


解决方法2：不使用string
  代码
  class Solution:
    def isPalindrome(self, x: int) -> bool:
        if x < 0:
            return False
        elif x < 10:
            return True
        else:
            origin = x
            i = 0
            while(x > 0):
                i = i * 10 + x % 10
                x //= 10
            return True if i == origin else False
  分析：算法总的时间复杂度为O(log(n))，空间复杂度为O(1)
  
  
  
tips:
  在比较是否相等那一步使用数学方法比较较快，如果是纯粹的按字符逐个比较较慢。
