102. Binary Tree Level Order Traversal

题目描述	
	Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).


例子1
	For example:
	Given binary tree [3,9,20,null,null,15,7],
	    3
	   / \
	  9  20
	    /  \
	   15   7
	return its level order traversal as:
	[
	  [3],
	  [9,20],
	  [15,7]
	]
		  
  
题目分析
 	层状输出，需要建立一个父队列和一个子队列，当父队列为空时，把子队列的内容拷贝到父队列，然后子队列清空，并将当前val[]保存


解决方法1：层状遍历
	# Definition for a binary tree node.
	# class TreeNode:
	#     def __init__(self, val=0, left=None, right=None):
	#         self.val = val
	#         self.left = left
	#         self.right = right
	class Solution:
	    def levelOrder(self, root: TreeNode) -> List[List[int]]:
	        if root == None:
	            return []
	        total = []
	        val = []
	        stack_p = [root]
	        stack_c = []
	        while(stack_p or stack_c):
	            cur = stack_p.pop(0)
	            val.append(cur.val)
	            if cur.left != None:
	                stack_c.append(cur.left)
	            if cur.right != None:
	                stack_c.append(cur.right)
	            if len(stack_p) == 0:
	                stack_p = [i for i in stack_c]
	                stack_c = []
	                total.append(val)
	                val = []
	        return total
