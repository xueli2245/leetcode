543. Diameter of Binary Tree

题目描述
  
	Given a binary tree, you need to compute the length of the diameter of the tree. The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.
 

例子1
	Given a binary tree
	          1
	         / \
	        2   3
	       / \     
	      4   5    
	Return 3, which is the length of the path [4,2,1,3] or [5,2,1,3].

Note: The length of path between two nodes is represented by the number of edges between them.
		  
  
题目分析
  求二叉树的直径，本质就是将求左子树的深度+右子树的深度相加的最大值。所以同理分为2步，第一步遍历，第二步求左子树深度和右子树深度。保留两者和的最大值即可。


解决方法1：遍历的思想
	# Definition for a binary tree node.
	# class TreeNode:
	#     def __init__(self, val=0, left=None, right=None):
	#         self.val = val
	#         self.left = left
	#         self.right = right
	maximum = 0
	class Solution:
	    def maxDepth(self, root: TreeNode) -> int:
	        if root == None:
	            return 0
	        else:
	            return 1 + max(self.maxDepth(root.left), self.maxDepth(root.right))
	    
	    def preOrderTraverse(self, root: TreeNode):
	        global maximum
	        if root == None:
	            return;
	        left = self.maxDepth(root.left)
	        right = self.maxDepth(root.right)
	        if left + right > maximum:
	            maximum = left + right
	        self.preOrderTraverse(root.left)
	        self.preOrderTraverse(root.right)
	        
	    def diameterOfBinaryTree(self, root: TreeNode) -> int:
	        global maximum
	        maximum = 0
	        self.preOrderTraverse(root)
	        return maximum
